# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# Use the official Python image from the Docker Hub
FROM ghcr.io/astral-sh/uv:python3.11-slim AS uv

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy the lock file and pyproject.toml for dependency management
COPY uv.lock pyproject.toml /app/

# Install the project's dependencies using the lockfile and settings
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-install-project --no-dev --no-editable

# Then, add the rest of the project source code and install it
ADD . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --no-editable

# Create the final image
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim

WORKDIR /app

# Copy the virtual environment directly
COPY --from=uv --chown=app:app /app/.venv /app/.venv

# Create app user
RUN useradd -m app

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Environment variable for the Kagi API key
ENV HYPERSPELL_TOKEN="USER OR APP TOKEN"
# Switch to non-root user
USER app

# Run the MCP server
ENTRYPOINT ["uv", "run", "hyperspell_mcp"]